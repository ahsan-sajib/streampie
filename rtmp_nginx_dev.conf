user nginx;
events {}

http {
    server {
        listen       80;
        server_name  localhost;

        location /thumbnails/ {
            root /var;
        }

        location /control {
            rtmp_control all;
        }

        location /live {
            hls;
            hls_path /var/hls;
            hls_fragment 5s;
            hls_playlist_length 30s;
            hls_nested on;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';

            # Define ABR renditions
            hls_variant _low BANDWIDTH=64000;
            hls_variant _mid BANDWIDTH=128000;
            hls_variant _high BANDWIDTH=256000;

            # Enable AES encryption
            hls_aes on;
            hls_aes_key "2b7e151628aed2a6abf7158809cf4f3c";   # Path to your AES encryption key
            hls_aes_iv "3ad77bb40d7a3660a89ecaf32466ef97";     # Path to your AES initialization vector
        }
    }
}

rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;
        drop_idle_publisher 10s;

        application live {
            live on;
            record off;

            on_publish http://host.docker.internal:8000/rtmp-events/publish;
            on_publish_done http://host.docker.internal:8000/rtmp-events/publish-done;
            on_play http://host.docker.internal:8000/rtmp-events/play;
            on_play_done http://host.docker.internal:8000/rtmp-events/play-done;

            hls on;
            hls_path /var/hls;
            hls_fragment 5s;
            hls_playlist_length 30s;

            # Define ABR renditions for HLS
            hls_variant _low BANDWIDTH=64000;
            hls_variant _mid BANDWIDTH=128000;
            hls_variant _high BANDWIDTH=256000;

            # Enable AES encryption
            hls_aes on;
            hls_aes_key "2b7e151628aed2a6abf7158809cf4f3c";   # Path to your AES encryption key
            hls_aes_iv "3ad77bb40d7a3660a89ecaf32466ef97";     # Path to your AES initialization vector
        }
    }
}
